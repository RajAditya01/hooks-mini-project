{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adity\\\\Desktop\\\\Learning-Reactjs\\\\hooks-mini-project\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\n// import react from \"react\";\n\n// let count=0;\n\n// const IncNUM = () => {\n//     count++;\n//     console.log(\"clicked\");\n// };\n\n// const App = () =>{\n//     return (\n//         <>\n//         <h1>{count}</h1>\n//         <button onClick={IncNUM}>Click Me</button>\n//         </>\n//     )\n// };\n\n// export default App;\n\n//increment\n// import React, { useState } from \"react\";\n// const App = () => {\n//     const [count, setCount] = useState(0);\n\n//     const IncNUM = () => {\n//         setCount(count + 1);\n//     };\n\n//     return (\n//         <>\n//             <h1>{count}</h1>\n//             <button onClick={IncNUM}>Click Me</button>\n//         </>\n//     );\n// };\n\n// export default App;\n\n//increment + decrement\n// import React, { useState } from \"react\";\n\n// const App = () => {\n//     const [count, setCount] = useState(0);\n\n//     const increment = () => {\n//         setCount(count + 1);\n//     };\n\n//     const decrement = () => {\n//         setCount(count - 1);\n//     };\n\n//     return (<>\n//             <h1>{count}</h1>\n//             <button onClick={increment}>Increment</button>\n//             <button onClick={decrement}>Decrement</button>\n//         </>\n//     );\n// };\n\n// export default App;\n\n//challenges\n// import React, { useState } from \"react\";\n\n// const App = () => {\n//     const [currentTime, setCurrentTime] = useState(\"\");\n\n//     const getTime = () => {\n//         const currTime = new Date().toLocaleTimeString();\n//         setCurrentTime(currTime);\n//     };\n\n//     return (\n//         <>\n//             <h1>{currentTime}</h1>\n//             <button onClick={getTime}>GET TIME</button>\n//         </>\n//     );\n// };\n\n// export default App;\n\n//creating a digital project\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // Initialize the state with the current time\n  const [ctime, setCtime] = useState(new Date().toLocaleTimeString());\n\n  // Use useEffect to update the time every second\n  useEffect(() => {\n    const interval = setInterval(() => {\n      // Update the time in the state\n      setCtime(new Date().toLocaleTimeString());\n    }, 1000); // Update every 1000 milliseconds (1 second)\n\n    // Cleanup the interval on component unmount\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: ctime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(App, \"wsJsT/98ovHYY/Cx51EfZHDc1uc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","ctime","setCtime","Date","toLocaleTimeString","interval","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/adity/Desktop/Learning-Reactjs/hooks-mini-project/src/App.jsx"],"sourcesContent":["// import react from \"react\";\r\n\r\n// let count=0;\r\n\r\n// const IncNUM = () => {\r\n//     count++;\r\n//     console.log(\"clicked\");\r\n// };\r\n\r\n// const App = () =>{\r\n//     return (\r\n//         <>\r\n//         <h1>{count}</h1>\r\n//         <button onClick={IncNUM}>Click Me</button>\r\n//         </>\r\n//     )\r\n// };\r\n\r\n// export default App;\r\n\r\n\r\n//increment\r\n// import React, { useState } from \"react\";\r\n// const App = () => {\r\n//     const [count, setCount] = useState(0);\r\n\r\n//     const IncNUM = () => {\r\n//         setCount(count + 1);\r\n//     };\r\n\r\n//     return (\r\n//         <>\r\n//             <h1>{count}</h1>\r\n//             <button onClick={IncNUM}>Click Me</button>\r\n//         </>\r\n//     );\r\n// };\r\n\r\n// export default App;\r\n\r\n\r\n//increment + decrement\r\n// import React, { useState } from \"react\";\r\n\r\n// const App = () => {\r\n//     const [count, setCount] = useState(0);\r\n\r\n//     const increment = () => {\r\n//         setCount(count + 1);\r\n//     };\r\n\r\n//     const decrement = () => {\r\n//         setCount(count - 1);\r\n//     };\r\n\r\n//     return (<>\r\n//             <h1>{count}</h1>\r\n//             <button onClick={increment}>Increment</button>\r\n//             <button onClick={decrement}>Decrement</button>\r\n//         </>\r\n//     );\r\n// };\r\n\r\n// export default App;\r\n\r\n\r\n//challenges\r\n// import React, { useState } from \"react\";\r\n\r\n// const App = () => {\r\n//     const [currentTime, setCurrentTime] = useState(\"\");\r\n\r\n//     const getTime = () => {\r\n//         const currTime = new Date().toLocaleTimeString();\r\n//         setCurrentTime(currTime);\r\n//     };\r\n\r\n//     return (\r\n//         <>\r\n//             <h1>{currentTime}</h1>\r\n//             <button onClick={getTime}>GET TIME</button>\r\n//         </>\r\n//     );\r\n// };\r\n\r\n// export default App;\r\n\r\n\r\n//creating a digital project\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst App = () => {\r\n    // Initialize the state with the current time\r\n    const [ctime, setCtime] = useState(new Date().toLocaleTimeString());\r\n\r\n    // Use useEffect to update the time every second\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            // Update the time in the state\r\n            setCtime(new Date().toLocaleTimeString());\r\n        }, 1000); // Update every 1000 milliseconds (1 second)\r\n\r\n        // Cleanup the interval on component unmount\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <h1>{ctime}</h1>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAIU,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC,CAAC;;EAEnE;EACAV,SAAS,CAAC,MAAM;IACZ,MAAMW,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/B;MACAJ,QAAQ,CAAC,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC,CAAC;IAC7C,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEV;IACA,OAAO,MAAMG,aAAa,CAACF,QAAQ,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIT,OAAA,CAAAE,SAAA;IAAAU,QAAA,eACIZ,OAAA;MAAAY,QAAA,EAAKP;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC,gBAClB,CAAC;AAEX,CAAC;AAACZ,EAAA,CApBID,GAAG;AAAAc,EAAA,GAAHd,GAAG;AAsBT,eAAeA,GAAG;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}